<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBoxHeader.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CIiAiIgIiICIiAiIgIiICIiAiIg//9k=
</value>
  </data>
</root>